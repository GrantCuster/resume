{"version":3,"file":"static/webpack/static/development/pages/index.js.03b3770d7c845ad7bc36.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import Head from \"next/head\";\nimport React from \"react\";\nimport _ from \"lodash\";\nimport * as d3 from \"d3-time\";\nimport * as d3f from \"d3-time-format\";\nimport * as Pluralize from \"pluralize\";\nimport * as Bowser from \"bowser\";\n\nfunction p(x, y) {\n  return `${x}px ${y}px`;\n}\n\nlet format = d3f.timeFormat(\"%B %Y\");\n\n// with days\nfunction timeSpent(start, end) {\n  let raw_months = d3.timeMonth.count(start, end);\n  let years = Math.floor(raw_months / 12);\n  let months = years > 0 ? raw_months % years : raw_months;\n  let months_end = d3.timeMonth.offset(start, raw_months);\n  let days = d3.timeDay.count(months_end, end);\n  // round months\n  if (days > 15) months++;\n  let values = [];\n  if (years > 0) {\n    values.push(years + \" \" + Pluralize(\"year\", years));\n  }\n  if (months > 0) {\n    values.push(months + \" \" + Pluralize(\"month\", months));\n  }\n  if (days > 0) {\n    // values.push(days + \" \" + Pluralize(\"day\", days));\n  }\n  return values.join(\", \");\n}\n\nfunction formatTime(start, end) {\n  return (\n    format(start) +\n    \"–\" +\n    (+end === +new Date() ? \"now\" : format(end)) +\n    \", \" +\n    timeSpent(start, end)\n  );\n}\n\nlet links = [\n  [\"http://feed.grantcuster.com\", \"Work and inspiration in progress.\"],\n  [\n    \"https://turbofan.fastforwardlabs.com\",\n    \"A Cloudera Fast Forward Labs prototype that places you in the role of turbofan factory owner.\"\n  ],\n  [\n    \"https://fastforwardlabs.github.io/prototype-videos\",\n    \"A video overview of the nine prototypes we've built at Cloudera Fast Forward Labs.\"\n  ],\n  [\n    \"https://beta.observablehq.com/@grantcuster\",\n    \"Code and design experiments in the form of interactive Observable notebooks.\"\n  ],\n  [\n    \"https://grantcuster.github.io/umap-explorer\",\n    \"A proof-of-concept that uses three.js to render tens of thousands of data points in an interactive visualization\"\n  ],\n  [\"https://blog.fastforwardlabs.com\", \"The Cloudera Fast Forward Labs blog.\"],\n  [\n    \"https://scifi.fastforwardlabs.com\",\n    \"A mini-site showcasing the science fiction stories included in each of the Fast Forward Labs reports.\"\n  ]\n];\n\nlet description =\n  \"Designer and front-end developer interested in procedural generation, data visualization, product design and rethinking things from scratch.\";\n\nexport default class extends React.Component {\n  static async getInitialProps({ req }) {\n    return { test: null };\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      loaded: false,\n      width: 600,\n      height: 800,\n      layout: \"web\",\n      render_info: null,\n      origin: null\n    };\n    this.link = this.link.bind(this);\n    this.setSize = _.debounce(this.setSize.bind(this), 100);\n    this.setLayout = this.setLayout.bind(this);\n  }\n\n  setSize() {\n    this.setState({\n      width: window.innerWidth,\n      height: window.innerHeight,\n    });\n  }\n\n  componentDidMount() {\n    this.setSize();\n   window.addEventListener(\"resize\", this.setSize);\n    let render_info = Bowser.getParser(window.navigator.userAgent).parse()\n      .parsedResult;\n    this.setState({ render_info, origin: window.location.href });\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.setSize);\n  }\n\n  setLayout(layout) {\n    this.setState({ layout: layout });\n  }\n\n  link(href) {\n    return <a href={href}>{href}</a>;\n  }\n\n  render() {\n    let { loaded, width, height, layout, render_info, origin } = this.state;\n    let font_size = 16;\n    let line_height = 1.5;\n    let grem = font_size * line_height;\n\n    let column_target = grem * 14;\n    let columns = Math.max(1, Math.round(width / column_target));\n    let column_width = width / columns;\n    let main_width = Math.min(columns, 2) * column_width;\n    let main_margin =\n      Math.floor((columns - Math.min(columns, 2)) / 2) * column_width;\n\n    if (layout === \"print\") {\n      width = null;\n      height = null;\n    }\n\n    if (width === null) {\n      main_width = \"auto\";\n      main_margin = 0;\n    }\n\n    return (\n      <div>\n        <Head>\n          <meta\n            name=\"viewport\"\n            content=\"width=device-width, initial-scale=1, shrink-to-fit=no\"\n          />\n          <meta name=\"theme-color\" content=\"#efefef\" />\n          <title>Grant Custer → Résumé</title>\n          <meta type=\"description\" value={description} />\n          <meta property=\"og:title\" content=\"Grant Custer → Résumé\" />\n          <meta property=\"og:description\" content={description} />\n          <meta property=\"og:url\" content=\"http://resume.grantcuster.com\" />\n          <meta name=\"twitter:card\" content=\"summary\" />\n        </Head>\n        <div style={{margin: loaded ? '0' : '0 auto', maxWidth: loaded ? width : 'auto'}}>\n          <div style={{ padding: grem / 2 }}>\n            <div>Grant Custer</div>\n            <div>Design–Code</div>\n            <div style={{ minHeight: grem }}>\n              <span className=\"print-hide\">\n                {width !== null && height !== null\n                  ? `${width}x${height}`\n                  : null}\n              </span>\n            </div>\n            <div>Résumé</div>\n          </div>\n          <div\n            className=\"content\"\n            style={{\n              width: main_width,\n              padding: grem / 2,\n              marginLeft: main_margin\n            }}\n          >\n            <div>Grant Custer</div>\n            <div style={{ marginBottom: grem }}>\n              <p>{description}</p>\n            </div>\n            <div style={{ marginBottom: grem * 1 }}>\n              <div>Work experience</div>\n            </div>\n            <div style={{ marginBottom: grem * 1 }}>\n              <div>Designer–developer, Cloudera Fast Forward Labs</div>\n              <div>{formatTime(new Date(2014, 7, 7), new Date())}</div>\n              <div>\n                <p>\n                  Designed and coded the interfaces for nine product prototypes\n                  demonstrating the possibilities of emerging technologies.\n                </p>\n                <p>\n                  Designed the Fast Forward Labs brand and surrounding material,\n                  including nine printed research reports, the website, the\n                  blog, and internal tools. Post-Cloudera acquisition (in 2017)\n                  I've been working to integrate that brand into the larger\n                  Cloudera brand system.\n                </p>\n                <p>\n                  Managed two projects by FFL interns, where they scoped,\n                  created and released their own prototypes.\n                </p>\n              </div>\n            </div>\n            <div style={{ marginBottom: grem * 1 }}>\n              <div>Designer–developer, Betaworks</div>\n              <div>\n                {formatTime(new Date(2012, 6, 15), new Date(2014, 7, 28))}\n              </div>\n              <p>\n                Designed and coded the interfaces for early-stage (under\n                four-person) start-ups.\n              </p>\n            </div>\n            <div style={{ marginBottom: grem * 1 }}>\n              <div>Designer–developer, Banters</div>\n              <div>\n                {formatTime(new Date(2011, 11, 1), new Date(2012, 6, 15))}\n              </div>\n              <p>\n                Designed and coded interfaces for a start-up focused on\n                capturing memorable conversations.\n              </p>\n            </div>\n            <div style={{ marginTop: grem }}>\n              <div>Code and software experience</div>\n              <p>Code: Javascript, React, D3.js, three.js.</p>\n              <p>Software: Figma, Photoshop, Illustrator, InDesign.</p>\n            </div>\n            <div style={{ marginBottom: grem, marginTop: grem }}>\n              <div>Links</div>\n              <div>\n                {links.map(l => (\n                  <p>\n                    {this.link(l[0])} – {l[1]}\n                  </p>\n                ))}\n              </div>\n            </div>\n            <div style={{}}>\n              <div>Contact</div>\n              <p>Email: grantcuster@gmail.com</p>\n              <p>\n                Twitter:{\" \"}\n                <a href=\"https://twitter.com/GrantCuster\">@GrantCuster</a>\n              </p>\n            </div>\n          </div>\n          <div style={{ padding: grem / 2 }}>\n            Generated\n            {origin !== null ? (\n              <span> from {this.link(origin)}</span>\n            ) : null} on {new Date().toLocaleString()}\n            {render_info !== null\n              ? ` with ${render_info.browser.name} ${\n                  render_info.browser.version\n                } on ${render_info.os.name} ${render_info.os.version}`\n              : null}\n            .\n          </div>\n        </div>\n        <style jsx global>{`\n          * {\n            box-sizing: border-box;\n          }\n          @page {\n            margin: calc(0.75in - ${grem}px);\n          }\n          @media print {\n            .content {\n              width: auto !important;\n              margin: auto !important;\n            }\n            .print-hide {\n              display: none;\n            }\n          }\n          html {\n            font-size: ${font_size}px;\n            line-height: ${line_height};\n          }\n          body {\n            margin: 0;\n            background: #efefef;\n            font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto,\n              Helvetica, Arial, sans-serif, \"Apple Color Emoji\",\n              \"Segoe UI Emoji\", \"Segoe UI Symbol\";\n          }\n          p {\n            margin: 0;\n            text-indent: ${grem}px;\n          }\n          a {\n            color: black;\n            word-break: break-all;\n            word-break: break-word;\n          }\n          button {\n            font-family: inherit;\n            font-size: inherit;\n            line-height: inherit;\n            border: none;\n            padding: 0;\n            margin: 0;\n            text-decoration: underline;\n            background: transparent;\n            cursor: pointer;\n          }\n        `}</style>\n      </div>\n    );\n  }\n}\n"],"mappings":"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","sourceRoot":""}